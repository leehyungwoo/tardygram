{"ast":null,"code":"var _jsxFileName = \"C:\\\\tardygram\\\\tardygram\\\\190722\\\\src\\\\components\\\\host\\\\SearchMap.js\";\nimport React, { Component } from 'react';\n\nclass SearchMap extends Component {\n  constructor(props) {\n    super(props); // this.state={\n    // }\n\n    this.changeFuncSubmit = this.changeFuncSubmit.bind(this);\n  }\n\n  changeFuncSubmit(e) {\n    e.preventDefault();\n    var keyword = document.getElementById('keyword').value;\n    this.setState({\n      keyword2: keyword\n    });\n  }\n\n  componentDidMount() {\n    const kakao = window.kakao; // 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다\n\n    new kakao.maps.InfoWindow({\n      zIndex: 1\n    });\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div \n    mapOption = {\n      center: new kakao.maps.LatLng(37.566826, 126.9786567),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n\n    }; // 지도를 생성합니다    \n\n    new kakao.maps.Map(mapContainer, mapOption);\n  } //  shouldComponentUpdate\n\n\n  shouldComponentUpdate(newProps, newState) {\n    var place_name = null;\n    let wedo = null;\n    let gyeongdo = null;\n    let japo = null; // 마커를 담을 배열입니다\n\n    var markers = [];\n    var chooseMarker = \"\";\n    const kakao = window.kakao; // 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다\n\n    var infowindow = new kakao.maps.InfoWindow({\n      zIndex: 1\n    });\n    var mapContainer = document.getElementById('map'),\n        // 지도를 표시할 div \n    mapOption = {\n      center: new kakao.maps.LatLng(37.566826, 126.9786567),\n      // 지도의 중심좌표\n      level: 3 // 지도의 확대 레벨\n\n    }; // 지도를 생성합니다    \n\n    var map = new kakao.maps.Map(mapContainer, mapOption); // 장소 검색 객체를 생성합니다\n\n    var ps = new kakao.maps.services.Places(); // 키워드로 장소를 검색합니다\n\n    searchPlaces(); // 키워드 검색을 요청하는 함수입니다\n\n    function searchPlaces() {\n      var keyword = document.getElementById('keyword').value;\n\n      if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\n        alert('키워드를 입력해주세요!');\n        return false;\n      } // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n\n\n      ps.keywordSearch(keyword, placesSearchCB);\n    } // 키워드 검색 완료 시 호출되는 콜백함수 입니다\n\n\n    function placesSearchCB(data, status, pagination) {\n      if (status === kakao.maps.services.Status.OK) {\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\n        // LatLngBounds 객체에 좌표를 추가합니다\n        var bounds = new kakao.maps.LatLngBounds();\n\n        for (var i = 0; i < data.length; i++) {\n          displayMarker(data[i]);\n          bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\n        } // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n\n\n        map.setBounds(bounds);\n      }\n    } // 지도에 마커를 표시하는 함수입니다\n\n\n    function displayMarker(place) {\n      var callback = function (result, status) {\n        if (status === kakao.maps.services.Status.OK) {\n          console.log('그런 너를 마주칠까 ' + result[0].address.address_name + '을 못가');\n        }\n      }; // 마커를 생성하고 지도에 표시합니다\n\n\n      var marker = new kakao.maps.Marker({\n        map: map,\n        position: new kakao.maps.LatLng(place.y, place.x)\n      }); //주소-좌표간 변환 서비스 객체를 생성한다.\n\n      var geocoder = new kakao.maps.services.Geocoder(); //목적지 좌표 확인\n      //두 좌표간 거리구하기 \n      // 마커에 클릭이벤트를 등록합니다\n\n      kakao.maps.event.addListener(marker, 'click', function () {\n        // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\n        place_name = place.place_name;\n        infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\n        infowindow.open(map, marker);\n        japo = marker.getPosition();\n        wedo = japo.getLat();\n        gyeongdo = japo.getLng();\n        console.log(japo);\n        console.log(wedo);\n        console.log(gyeongdo);\n        geocoder.coord2Address(gyeongdo, wedo, callback);\n        chooseMarker = callback.result[0].address.address_name; // return place.place_name;\n      });\n    }\n\n    return true;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"map_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"map\",\n      style: {\n        width: \"500px\",\n        height: \"400px\",\n        position: \"relative\",\n        overflow: \"hidden\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"second\",\n      id: \"keyword\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"text\",\n      onClick: this.changeFuncSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"\\uAC80\\uC0C9!\")));\n  }\n\n}\n\nexport default SearchMap;","map":{"version":3,"sources":["C:\\tardygram\\tardygram\\190722\\src\\components\\host\\SearchMap.js"],"names":["React","Component","SearchMap","constructor","props","changeFuncSubmit","bind","e","preventDefault","keyword","document","getElementById","value","setState","keyword2","componentDidMount","kakao","window","maps","InfoWindow","zIndex","mapContainer","mapOption","center","LatLng","level","Map","shouldComponentUpdate","newProps","newState","place_name","wedo","gyeongdo","japo","markers","chooseMarker","infowindow","map","ps","services","Places","searchPlaces","replace","alert","keywordSearch","placesSearchCB","data","status","pagination","Status","OK","bounds","LatLngBounds","i","length","displayMarker","extend","y","x","setBounds","place","callback","result","console","log","address","address_name","marker","Marker","position","geocoder","Geocoder","event","addListener","setContent","open","getPosition","getLat","getLng","coord2Address","render","width","height","overflow"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\n\r\n\r\nclass SearchMap extends Component{\r\n    \r\n    constructor(props){ \r\n        super(props)\r\n         \r\n        // this.state={\r\n        // }\r\n       \r\n        this.changeFuncSubmit = this.changeFuncSubmit.bind(this)\r\n   \r\n    }\r\n    \r\n    changeFuncSubmit(e){\r\n        e.preventDefault() \r\n        var keyword = document.getElementById('keyword').value;\r\n        this.setState({\r\n        keyword2:keyword\r\n        })\r\n    }\r\n     componentDidMount(){\r\n        const kakao = window.kakao;\r\n        // 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다\r\n        new kakao.maps.InfoWindow({zIndex:1});\r\n\r\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n            mapOption = {\r\n                center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n                level: 3 // 지도의 확대 레벨\r\n            };  \r\n\r\n        // 지도를 생성합니다    \r\n        new kakao.maps.Map(mapContainer, mapOption); \r\n     }\r\n    //  shouldComponentUpdate\r\n    shouldComponentUpdate(newProps, newState){\r\n        var place_name = null;\r\n        let wedo = null;\r\n        let gyeongdo = null;\r\n        let japo = null;\r\n        // 마커를 담을 배열입니다\r\n        var markers = [];\r\n        var chooseMarker =\"\"\r\n        const kakao = window.kakao;\r\n        // 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다\r\n        var infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n\r\n        var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n            mapOption = {\r\n                center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n                level: 3 // 지도의 확대 레벨\r\n            };  \r\n\r\n        // 지도를 생성합니다    \r\n        var map = new kakao.maps.Map(mapContainer, mapOption); \r\n\r\n        // 장소 검색 객체를 생성합니다\r\n        var ps = new kakao.maps.services.Places(); \r\n\r\n        // 키워드로 장소를 검색합니다\r\n        searchPlaces();\r\n\r\n        // 키워드 검색을 요청하는 함수입니다\r\n        function searchPlaces() {\r\n\r\n            var keyword = document.getElementById('keyword').value;\r\n\r\n            if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\r\n                alert('키워드를 입력해주세요!');\r\n                return false;\r\n            }\r\n\r\n            // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n            ps.keywordSearch(keyword, placesSearchCB);\r\n\r\n        }\r\n\r\n\r\n        // 키워드 검색 완료 시 호출되는 콜백함수 입니다\r\n        function placesSearchCB (data, status, pagination) {\r\n            if (status === kakao.maps.services.Status.OK) {\r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n                // LatLngBounds 객체에 좌표를 추가합니다\r\n                var bounds = new kakao.maps.LatLngBounds();\r\n\r\n                for (var i=0; i<data.length; i++) {\r\n                    displayMarker(data[i]);    \r\n          \r\n                    bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));\r\n                }       \r\n\r\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n                map.setBounds(bounds);\r\n            } \r\n    \r\n\r\n        }\r\n        \r\n        // 지도에 마커를 표시하는 함수입니다\r\n        function displayMarker(place) {\r\n            var callback = function(result, status) {\r\n                if (status === kakao.maps.services.Status.OK) {\r\n                    console.log('그런 너를 마주칠까 ' + result[0].address.address_name + '을 못가');\r\n\r\n                }\r\n            };\r\n            // 마커를 생성하고 지도에 표시합니다\r\n            var marker = new kakao.maps.Marker({\r\n                map: map,\r\n                position: new kakao.maps.LatLng(place.y, place.x) \r\n            });\r\n            //주소-좌표간 변환 서비스 객체를 생성한다.\r\n            var geocoder = new kakao.maps.services.Geocoder();\r\n\r\n            //목적지 좌표 확인\r\n\r\n\r\n            //두 좌표간 거리구하기 \r\n         \r\n            // 마커에 클릭이벤트를 등록합니다\r\n            kakao.maps.event.addListener(marker, 'click', function() {\r\n                // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다\r\n                \r\n                place_name= place.place_name\r\n                infowindow.setContent('<div style=\"padding:5px;font-size:12px;\">' + place.place_name + '</div>');\r\n                infowindow.open(map, marker);\r\n                japo = marker.getPosition()\r\n                wedo = japo.getLat();\r\n                gyeongdo = japo.getLng();\r\n                console.log(japo)\r\n                console.log(wedo)\r\n                console.log(gyeongdo)\r\n                geocoder.coord2Address(gyeongdo, wedo, callback);\r\n                chooseMarker = callback.result[0].address.address_name;\r\n\r\n                // return place.place_name;\r\n            });\r\n        }\r\n\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    \r\n    render(){\r\n        return(\r\n            \r\n            <div className=\"map_wrap\">\r\n             <div id=\"map\" style={{width:\"500px\", height:\"400px\",position:\"relative\",overflow:\"hidden\"}}></div>\r\n             <form> \r\n            <input name=\"second\" id=\"keyword\" type=\"text\"/>\r\n            <button type=\"text\"  onClick={this.changeFuncSubmit}>검색!</button>\r\n            {/* if(this.chooseMarker != null) */}\r\n        \r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchMap"]},"metadata":{},"sourceType":"module"}